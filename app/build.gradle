apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        applicationId "com.tablereservation"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    junit_version = '4.12'
    dagger_version = '2.16'
    javaxAnnotations_version = '1.0'
    javaxInject_version = '1'
    okhttp_logging_interceptor_version = '3.8.1'
    retrofit_version = '2.3.0'
    archComponents_version ='1.1.1'
    nav_version ='1.0.0-alpha07'
    kotlin_coroutines_version = '1.0.0'
    room_version = '1.1.1'
    work_version = '1.0.0-alpha10'
    kluent_version = '1.42'
    robolectric_version = '4.0.1'
    mockito_version = '2.0.0'
    androidx_test_core_version = '1.0.0'
    androidx_test_rules_version = '1.1.0'
    androidx_test_espresso = '3.1.0'
    androidx_lifecycle_extensions = '2.0.0'
    androidx_recycler_view = '1.0.0'
    androidx_constraint_layout = '1.1.3'
    androidx_appcompat = '1.0.0'
    androidx_test_junit_ext = '1.0.0'
    google_truth_version = '0.42'
}

dependencies {

    // Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test:core:$androidx_test_core_version"
    testImplementation "org.amshove.kluent:kluent:$kluent_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"

    androidTestImplementation "com.google.truth:truth:$google_truth_version"
    androidTestImplementation "androidx.test:core:$androidx_test_core_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_rules_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_rules_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_junit_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso"
    androidTestImplementation "android.arch.work:work-testing:$work_version"
    testImplementation "androidx.arch.core:core-testing:$androidx_lifecycle_extensions"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat"

    //dagger
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    compileOnly "javax.inject:javax.inject:$javaxInject_version"
    //retrofit, okhttp
    compileOnly  "javax.annotation:jsr250-api:$javaxAnnotations_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor_version"
    // lifecycle
    kapt "androidx.lifecycle:lifecycle-compiler:$androidx_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_extensions"
    //recycle view
    implementation "androidx.recyclerview:recyclerview:$androidx_recycler_view"
    // constraint layout
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint_layout"
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"
    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    // Room
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:runtime:$room_version"
    // Work Manager
    implementation "android.arch.work:work-runtime-ktx:$work_version"
    implementation "android.arch.work:work-firebase:$work_version"

}